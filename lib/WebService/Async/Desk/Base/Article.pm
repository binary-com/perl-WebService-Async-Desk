package WebService::Async::Desk::Base::Article;

use strict;
use warnings;

# VERSION

=head1 NAME

WebService::Async::Desk::Base::Article - support for desk.com entity

=head1 DESCRIPTION

This is autogenerated from the L<https://www.desk.com> API documentation.

=cut

=head1 METHODS - Attributes

=head2 subject

the subject of the article.

=cut

sub subject : method { shift->{subject} }

=head2 position

the position of the article as displayed in the support center.

=cut

sub position : method { shift->{position} }

=head2 quickcode

code used in the agent to quickly add article content to a case.

=cut

sub quickcode : method { shift->{quickcode} }

=head2 keywords

keywords in the article.

=cut

sub keywords : method { shift->{keywords} }

=head2 publish_at

date the article is to be published.

=cut

sub publish_at : method { shift->{publish_at} }

=head2 created_at

date the article was created.

=cut

sub created_at : method { shift->{created_at} }

=head2 updated_at

date the article was updated.

=cut

sub updated_at : method { shift->{updated_at} }

=head2 body

the content of the article (HTML formatted).

=cut

sub body : method { shift->{body} }

=head2 body_email

email specific content.

=cut

sub body_email : method { shift->{body_email} }

=head2 body_email_auto

true/false to use content from body.

=cut

sub body_email_auto : method { shift->{body_email_auto} }

=head2 body_chat

chat specific content.

=cut

sub body_chat : method { shift->{body_chat} }

=head2 body_chat_auto

true/false to use content from body.

=cut

sub body_chat_auto : method { shift->{body_chat_auto} }

=head2 body_web_callback

chat specific content.

=cut

sub body_web_callback : method { shift->{body_web_callback} }

=head2 body_web_callback_auto

true/false to use content from body.

=cut

sub body_web_callback_auto : method { shift->{body_web_callback_auto} }

=head2 body_twitter

twitter specific content.

=cut

sub body_twitter : method { shift->{body_twitter} }

=head2 body_twitter_auto

true/false to use content from body.

=cut

sub body_twitter_auto : method { shift->{body_twitter_auto} }

=head2 body_qna

QNA specific content.

=cut

sub body_qna : method { shift->{body_qna} }

=head2 body_qna_auto

true/false to use content from body.

=cut

sub body_qna_auto : method { shift->{body_qna_auto} }

=head2 body_phone

phone specific content.

=cut

sub body_phone : method { shift->{body_phone} }

=head2 body_phone_auto

true/false to use content from body.

=cut

sub body_phone_auto : method { shift->{body_phone_auto} }

=head2 body_facebook

facebook specific content.

=cut

sub body_facebook : method { shift->{body_facebook} }

=head2 body_facebook_auto

true/false to use content from body.

=cut

sub body_facebook_auto : method { shift->{body_facebook_auto} }

=head2 rating

The percentage of people who found the article helpful.

=cut

sub rating : method { shift->{rating} }

=head2 rating_count

The number of ratings given to the article.

=cut

sub rating_count : method { shift->{rating_count} }

=head2 rating_score

The number of people who found the article helpful.

=cut

sub rating_score : method { shift->{rating_score} }

=head2 public_url

The publicly accessible URL for this article.

=cut

sub public_url : method { shift->{public_url} }

=head2 in_support_center

true/false to display the article in the support center.

=cut

sub in_support_center : method { shift->{in_support_center} }

=head2 internal_notes

notes to the agent using the article.

=cut

sub internal_notes : method { shift->{internal_notes} }

=head2 locale

the ISO language code of the article.

=cut

sub locale : method { shift->{locale} }

=head2 available_locales

a list of ISO language codes corresponding to all available translations for the article.

=cut

sub available_locales : method { shift->{available_locales} }

1;

__END__

=head1 AUTHOR

binary.com C<< BINARY@cpan.org >>

=head1 LICENSE

Copyright binary.com 2017-2019. Licensed under the same terms as Perl itself.

